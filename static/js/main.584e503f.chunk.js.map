{"version":3,"sources":["components/sync/Sync.module.css","components/home/Home.module.css","assets/logo.png","components/QR.module.css","components/list/List.module.css","components/card/Card.module.css","API/API.js","utils/Colors.js","components/card/Card.jsx","components/QR.jsx","components/list/List.jsx","components/home/Home.jsx","components/sync/Sync.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","API","fetchList","id","get","then","r","data","addTask","text","post","done","createList","title","color","JSON","stringify","name","items","editTask","listId","taskId","task","patch","deleteTask","delete","renameList","newName","createUser","pins","fetchPins","userId","setPins","window","checkColor","test","setForeColor","borderColor","setBackColor","rgb","result","exec","parseInt","getRGB","backgroundColor","palette","Options","props","className","styles","options","editMode","icon","style","onClick","saveFun","editFun","deleteFun","Card","useState","isOptsShown","showOpts","setEditMode","newText","setNewText","markTask","list","update","saveTask","card","active","grid","btn","textDone","textActive","onKeyPress","e","key","preventDefault","input","autoFocus","value","onChange","target","componentDecorator","decoratedHref","decoratedText","href","menuBtn","hideFun","markFun","QR","wrapper","link","Header","isCopied","setCopied","newTitle","setNewTitle","isPinned","setPinned","isQRShown","showQR","useEffect","parse","localStorage","getItem","includes","header","titleSection","headerTitle","placeholder","to","cursor","titleButton","add","index","indexOf","splice","unshift","setItem","pinList","copySection","onCopy","copyLink","NewCard","cardText","setCardText","onAdd","inputWrapper","autoComplete","document","activeElement","blur","addButton","opacity","HiddenItems","display","justifyContent","hiddenWrapper","hidden","expandDone","hideDone","ic","label","hiddenCount","List","useParams","setItems","setTitle","setColor","setLink","isHidden","setHidden","location","scrollTo","top","behavior","updateHistory","history","pop","doneCount","doneItemsComponents","Object","entries","map","item","activeItemsComponents","background","querySelector","focus","resp","pseudoExtender","History","historyLoaded","setHistoryLoaded","getPins","getHistory","setTimeout","historyItems","el","pin","pinnedItems","hasHistory","length","ListCard","listProps","setListProps","getListProps","textDecoration","itemWrapper","circle","listName","SyncParams","isSynced","setSynced","syncKey","setSyncKey","isHintShown","showHint","checkSync","storedKey","generateLink","syncWrapper","syncedOptions","hint","localOptions","localPins","ClearButton","cleared","setCleared","temp","setTemp","setOpacity","currentTimer","setCurrentTimer","clearWrapper","clearTimeout","saveHistory","removeItem","Home","colors","colorActive","form","colorsSection","buttonSection","button","Sync","isDone","setDone","nosync","src","logo","alt","App","exact","path","render","component","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.584e503f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Sync_wrapper__3nDo8\",\"AnimationName\":\"Sync_AnimationName__1dH4-\",\"form\":\"Sync_form__1UUcD\",\"logo\":\"Sync_logo__2Efod\",\"btn\":\"Sync_btn__TqCn-\",\"link\":\"Sync_link__3QI0d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Home_wrapper__21I8r\",\"AnimationName\":\"Home_AnimationName__129wy\",\"form\":\"Home_form__2PVZc\",\"colorsSection\":\"Home_colorsSection__1qhpQ\",\"colors\":\"Home_colors__Wn3v2\",\"color\":\"Home_color__SxRST\",\"colorActive\":\"Home_colorActive__TtI0C\",\"input\":\"Home_input__g22eg\",\"buttonSection\":\"Home_buttonSection__3IyhQ\",\"button\":\"Home_button__2bu16\",\"history\":\"Home_history__BbYal\",\"clearWrapper\":\"Home_clearWrapper__1mscG\",\"itemWrapper\":\"Home_itemWrapper__15sR6\",\"listName\":\"Home_listName__yPDAa\",\"circle\":\"Home_circle__3OO7o\",\"syncWrapper\":\"Home_syncWrapper__cWi-O\",\"syncedOptions\":\"Home_syncedOptions__2Ubl0\",\"localOptions\":\"Home_localOptions__2rxR5\",\"hint\":\"Home_hint__3fEJU\",\"btn\":\"Home_btn__w4qdg\"};","module.exports = __webpack_public_path__ + \"static/media/logo.00e1ec44.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"QR_wrapper__2ReFL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3Y7K_\",\"background\":\"List_background__38Tqr\",\"link\":\"List_link__3S9sQ\",\"header\":\"List_header__1dY2M\",\"titleSection\":\"List_titleSection__2ygVl\",\"headerTitle\":\"List_headerTitle__1KaA3\",\"title\":\"List_title__2nKQA\",\"titleButton\":\"List_titleButton__2bwLa\",\"copySection\":\"List_copySection__3tSQk\",\"copyLink\":\"List_copyLink__2y28D\",\"hiddenWrapper\":\"List_hiddenWrapper__3-oke\",\"ic\":\"List_ic__jKFFL\",\"label\":\"List_label__bS_3U\",\"inputWrapper\":\"List_inputWrapper__haad0\",\"input\":\"List_input__1a24L\",\"addButton\":\"List_addButton__2tGz8\",\"pseudoExtender\":\"List_pseudoExtender__1oyS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3MKhb\",\"grid\":\"Card_grid__3qjAA\",\"btn\":\"Card_btn__1icHr\",\"menuBtn\":\"Card_menuBtn__3nbt5\",\"done\":\"Card_done__1-s6X\",\"active\":\"Card_active__2XdAX\",\"textDone\":\"Card_textDone__6XGo6\",\"options\":\"Card_options__2zSzB\",\"icon\":\"Card_icon__38c_C\",\"input\":\"Card_input__1HGG_\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create(\r\n    {\r\n        baseURL: \"https://todo-list-4b27a.firebaseio.com/\",\r\n        withCredentials: false\r\n    }\r\n)\r\nexport const API = {\r\n    fetchList: (id) => {\r\n        return instance.get(`storage/${id}.json`).then(r=>r.data)\r\n    },\r\n    addTask: (id, text) => {\r\n        return instance.post(`storage/${id}/items.json`, {text: text, done: false}).then(r=>r.data)\r\n    },\r\n    createList: (title, color) => {\r\n        return instance.post('storage.json', JSON.stringify({name: title, color: color, items: []})).then(r=>r.data)\r\n    },\r\n    editTask: (listId, taskId, task) => {\r\n        return instance.patch(`storage/${listId}/items/${taskId}.json`, {text: task.text, done: task.done}).then(r=>r.data)\r\n    },\r\n    deleteTask: (listId, taskId) => {\r\n        return instance.delete(`storage/${listId}/items/${taskId}.json`).then(r=>r.data)\r\n    },\r\n    renameList: (listId, newName) => {\r\n        return instance.patch(`storage/${listId}.json`, {name: newName}).then(r=>r.data)\r\n    },\r\n    createUser: () => {\r\n        return instance.post(`pins.json`, {pins: {}}).then(r=>r.data)\r\n    },\r\n    fetchPins: (userId) => {\r\n        return instance.get(`pins/${userId}.json`).then(r=>r.data)\r\n    },\r\n    setPins: (userId, pins) => {\r\n        return instance.patch(`pins/${userId}.json`, {pins: pins}).then(r=>r.data)\r\n    }\r\n\r\n}\r\nwindow.API = API;\r\n\r\n","export const checkColor = (color) => {\r\n    // if it's ok\r\n    if(/^#[0-9A-F]{6}$/i.test(color)) return color\r\n\r\n    // Backward compatibility\r\n    switch (color) {\r\n        case 'red':\r\n            return  '#e76f51'\r\n        case 'blue':\r\n            return '#0077b6'\r\n        case 'green':\r\n            return '#40916c'\r\n        case 'dark': // yeah, i know\r\n            return '#ff5d8f'\r\n        default:\r\n            return '#495057'\r\n    }\r\n}\r\n// Turns #FFFFFF into [255,255,255]\r\nconst getRGB = (color) => {\r\n    let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(checkColor(color))\r\n    return result ? [\r\n         parseInt(result[1], 16),\r\n         parseInt(result[2], 16),\r\n         parseInt(result[3], 16)\r\n    ] : [236, 236, 236]\r\n}\r\n\r\nexport const setForeColor = (color) => {\r\n    return {\r\n        color: checkColor(color),\r\n        borderColor: checkColor(color)\r\n    }\r\n}\r\nexport const setBackColor = (color) => {\r\n    let rgb = getRGB(color)\r\n    return {\r\n        backgroundColor: `rgba(${rgb[0]},${rgb[1]},${rgb[2]},.7)`\r\n    }\r\n}\r\n\r\nexport const palette = [\r\n    '#577590',\r\n    '#f2a541',\r\n    '#cc0029',\r\n    '#ce4760',\r\n    '#3ab795',\r\n    '#495057'\r\n]\r\n","import React, {useState} from 'react'\r\nimport styles from './Card.module.css'\r\nimport {API} from \"../../API/API\";\r\nimport Linkify from \"react-linkify\"\r\nimport {setForeColor} from \"../../utils/Colors\";\r\n\r\nconst Options = (props) => {\r\n    return <div className={styles.options}>\r\n        {props.editMode ?\r\n            <div className={styles.icon} style={setForeColor(props.color)} onClick={props.saveFun}>\r\n                <i\r\n                    className={'fas fa-check'}/> {'Save'}\r\n            </div>\r\n            :\r\n            <div className={styles.icon} style={setForeColor(props.color)} onClick={props.editFun}>\r\n                <i\r\n                    className={'fas fa-pen'}/> {'Edit'}\r\n            </div>\r\n        }\r\n        <div className={styles.icon} style={setForeColor(props.color)} onClick={props.deleteFun}><i className='fas fa-trash'/> Delete\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Card = (props) => {\r\n    let [isOptsShown, showOpts] = useState(false)\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [newText, setNewText] = useState(props.text)\r\n\r\n    const hideOptions = () => {\r\n        showOpts(false)\r\n    }\r\n    const markTask = () => {\r\n        API.editTask(props.list, props.id, {text: props.text, done: !props.done}).then(\r\n            () => {\r\n                props.update(props.list)\r\n            }\r\n        )\r\n    }\r\n    const deleteTask = () => {\r\n        API.deleteTask(props.list, props.id).then(\r\n            () => {\r\n                props.update(props.list)\r\n            }\r\n        )\r\n    }\r\n\r\n    const listenKey = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault()\r\n            saveTask()\r\n        }\r\n    }\r\n\r\n    const saveTask = () => {\r\n        API.editTask(props.list, props.id, {text: newText, done: props.done}).then(\r\n            () => {\r\n                setEditMode(false)\r\n                props.update(props.list)\r\n            }\r\n        )\r\n    }\r\n    return <div className={`${styles.card} ${props.done ? styles.done : styles.active}`}>\r\n        <div className={styles.grid}>\r\n            <div className={styles.btn} style={setForeColor(props.color)}> {!props.done ?\r\n                <i className='far fa-circle' onClick={markTask}/> :\r\n                <i className='fas fa-check-circle' onClick={markTask}/>}</div>\r\n            <div\r\n                className={props.done ? styles.textDone : styles.textActive}>{\r\n                editMode\r\n                    ?\r\n                    <input onKeyPress={listenKey} className={styles.input}\r\n                           autoFocus={true} value={newText}\r\n                           onChange={(e) => {\r\n                               setNewText(e.target.value)\r\n                           }}/>\r\n                    :\r\n                    <Linkify componentDecorator={(decoratedHref, decoratedText, key) => (\r\n                        <a target=\"blank\" href={decoratedHref} key={key} style={{color: \"black\"}}>\r\n                            {'Link'}\r\n                        </a>\r\n                    )}>\r\n                        <span>{props.text}</span>\r\n                    </Linkify>}\r\n            </div>\r\n            <div className={styles.btn} style={setForeColor(props.color)}><i\r\n                id={styles.menuBtn}\r\n                className={isOptsShown ? 'fas fa-ellipsis-h' : 'fas fa-ellipsis-h'}\r\n                onClick={() => showOpts(!isOptsShown)}/></div>\r\n        </div>\r\n        {isOptsShown && <Options\r\n            color={props.color} hideFun={hideOptions} markFun={markTask}\r\n            deleteFun={deleteTask} editMode={editMode}\r\n            editFun={() => setEditMode(true)} saveFun={saveTask}/>}\r\n    </div>\r\n}\r\nexport default Card\r\n","import React from 'react'\r\nimport styles from './QR.module.css'\r\nimport QRCode from 'qrcode.react'\r\n\r\nconst QR = (props) => {\r\n    return <div className={styles.wrapper} onClick={props.hideFun}>\r\n        <QRCode value={props.link}/>\r\n    </div>\r\n}\r\n\r\nexport default QR","import React, {useEffect, useState} from 'react'\r\nimport styles from './List.module.css'\r\nimport Card from \"../card/Card\";\r\nimport {NavLink, useParams} from 'react-router-dom'\r\nimport {API} from \"../../API/API\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport QR from \"../QR\";\r\nimport {checkColor, setBackColor, setForeColor} from \"../../utils/Colors\";\r\n\r\nconst Header = (props) => {\r\n    let [isCopied, setCopied] = useState(false)\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [newTitle, setNewTitle] = useState(props.title)\r\n    let [isPinned, setPinned] = useState(false)\r\n    let [isQRShown, showQR] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            let pins = JSON.parse(localStorage.getItem('pins'))\r\n            setNewTitle(props.title)\r\n            setPinned(pins !== null && pins.includes(props.listId))\r\n        }, [props.listId, isPinned, props.title]\r\n    )\r\n\r\n    const pinList = (add) => {\r\n        let pins = JSON.parse(localStorage.getItem('pins'))\r\n        let key = localStorage.getItem('syncKey')\r\n\r\n        if (pins === null) pins = []\r\n\r\n        if (pins.includes(props.listId)) {\r\n            let index = pins.indexOf(props.listId);\r\n            pins.splice(index, 1);\r\n        }\r\n        if (add) {\r\n            pins.unshift(props.listId) //> 100 && pins.pop() //I'm not sure if I need to limit pins\r\n            setPinned(true)\r\n        } else\r\n            setPinned(false)\r\n\r\n        localStorage.setItem('pins', JSON.stringify(pins))\r\n        key !== null && API.setPins(key, pins)\r\n        props.update(props.listId)\r\n    }\r\n\r\n    const rename = () => {\r\n        API.renameList(props.listId, newTitle === '' ? props.title : newTitle).then(() => {\r\n            setEditMode(false)\r\n            props.update(props.listId)\r\n        })\r\n    }\r\n\r\n\r\n    return <div className={styles.header}>\r\n        <div className={styles.titleSection}>\r\n            <div className={styles.headerTitle}>\r\n                {editMode\r\n                    ?\r\n                    <input autoFocus={true} placeholder={'New title...'} onChange={(e) => {\r\n                        setNewTitle(e.target.value)\r\n                    }}\r\n                           value={newTitle}/>\r\n                    :\r\n                    <div className={styles.title}><NavLink className={styles.link} style={setForeColor(props.color)}\r\n                                                           to={'/'}>{'ToDoDoLi:'}</NavLink>{\r\n                        <span onClick={() => setEditMode(true)} style={{cursor: \"pointer\"}}>{props.title}</span> || ''}\r\n                    </div>\r\n                }\r\n            </div>\r\n            {editMode && <div className={styles.titleButton}>\r\n                <i\r\n                    className={'fas fa-check'}\r\n                    onClick={rename}/>\r\n            </div>}\r\n            {!editMode && <div className={styles.titleButton} onClick={() => {\r\n                pinList(!isPinned);\r\n            }}>\r\n                <i\r\n                    className={isPinned ? 'fas fa-star' : 'far fa-star'}\r\n                />\r\n            </div>}\r\n        </div>\r\n        <div className={styles.copySection}>\r\n            <CopyToClipboard text={props.link} onCopy={() => setCopied(true)}>\r\n                <div className={styles.copyLink}>\r\n                    <i className={isCopied ? 'fas fa-check' : 'fas fa-link'}/>\r\n                </div>\r\n            </CopyToClipboard>\r\n        </div>\r\n        <div className={styles.copySection}>\r\n            <div className={styles.copyLink} onClick={() => showQR(true)}>\r\n                <i className={'fas fa-qrcode'}/>\r\n            </div>\r\n            {isQRShown && <QR link={props.link} hideFun={() => showQR(false)}/>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst NewCard = (props) => {\r\n    let [cardText, setCardText] = useState('')\r\n    const updateInput = (e) => {\r\n        setCardText(e.target.value)\r\n    }\r\n\r\n    const onAdd = () => {\r\n        if (cardText === '') return\r\n        props.addTask(cardText)\r\n        setCardText('')\r\n    }\r\n    const listenKey = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault()\r\n            document.activeElement.blur()\r\n            onAdd()\r\n        }\r\n    }\r\n\r\n    return <div className={styles.inputWrapper} id={'addCard'}>\r\n        <input autoComplete=\"off\" id={'input'} placeholder='New task...' className={styles.input} value={cardText}\r\n               onChange={updateInput} onKeyPress={listenKey}/>\r\n        <div className={styles.addButton} id={'button'}\r\n             style={cardText !== '' ? {opacity: 1, ...setForeColor(props.color)} : {opacity: .6, ...setForeColor(props.color)}}\r\n             onClick={onAdd}><i className='fas fa-plus-circle'/></div>\r\n    </div>\r\n}\r\n\r\nconst HiddenItems = (props) => {\r\n\r\n    return <div\r\n        style={{display: 'flex', justifyContent: 'center', ...setForeColor(props.color)}}\r\n    >\r\n        <div className={styles.hiddenWrapper}\r\n             onClick={props.hidden ? props.expandDone : props.hideDone}>\r\n            <div className={styles.ic} style={setForeColor(props.color)}>\r\n                <i className={props.hidden ? 'fas fa-chevron-down' : 'fas fa-chevron-up'}/>\r\n            </div>\r\n            <div className={styles.label}>{!props.hidden ? 'Hide checked' : `${props.hiddenCount} item${props.hiddenCount === 1 ? '' : 's'} done`}</div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst List = () => {\r\n    let {id} = useParams()\r\n    let [items, setItems] = useState({})\r\n    let [title, setTitle] = useState('')\r\n    let [color, setColor] = useState(checkColor(''))\r\n    let [link, setLink] = useState('')\r\n    let [isHidden, setHidden] = useState(true)\r\n\r\n    useEffect(\r\n        () => {\r\n            setLink(window.location.href)\r\n            window.scrollTo({top: 0, behavior: \"smooth\"})\r\n\r\n        }, []\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n            fetchList(id)\r\n        }, [id]\r\n    )\r\n\r\n    const updateHistory = () => {\r\n        let history = JSON.parse(localStorage.getItem('history'))\r\n        let pins = JSON.parse(localStorage.getItem('pins'))\r\n        if (pins === null) pins = []\r\n        if (history === null) history = []\r\n\r\n        if (history.includes(id)) {\r\n            let index = history.indexOf(id);\r\n            history.splice(index, 1);\r\n\r\n        }\r\n        if (!pins.includes(id)) history.unshift(id) > 10 && history.pop()\r\n        else {\r\n            let index = pins.indexOf(id);\r\n            pins.splice(index, 1);\r\n            pins.unshift(id)\r\n            localStorage.setItem('pins', JSON.stringify(pins))\r\n        }\r\n        localStorage.setItem('history', JSON.stringify(history))\r\n\r\n    }\r\n\r\n\r\n    const fetchList = (id) => {\r\n        API.fetchList(id).then(r => {\r\n            updateHistory()\r\n\r\n            if (r == null) return\r\n            setItems(r.items)\r\n            setTitle(r.name)\r\n            setColor(checkColor(r.color))\r\n        })\r\n    }\r\n    const addTask = (text) => {\r\n        document.querySelector('#input').focus()\r\n\r\n        API.addTask(id, text).then(\r\n            (resp) => {\r\n                resp.name && fetchList(id)\r\n            }\r\n        )\r\n    }\r\n    let doneCount = 0;\r\n    const doneItemsComponents = items ? Object.entries(items).map(([key, item]) => {\r\n        if (item.done) {\r\n            doneCount++\r\n            return <Card color={color} done={item.done} text={item.text} key={key} id={key} list={id}\r\n                         update={fetchList}/>\r\n        }\r\n    }) : null\r\n    const activeItemsComponents = items ? Object.entries(items).map(([key, item]) => {\r\n        if (!item.done) return <Card color={color} done={item.done} text={item.text} key={key} id={key} list={id}\r\n                                     update={fetchList}/>\r\n    }) : null\r\n\r\n\r\n    return <div className={styles.background} style={setBackColor(color)}>\r\n        <Header title={title} listId={id} update={fetchList} link={link} color={color}/>\r\n        <div className={styles.list}>\r\n            {doneCount === 0 || <HiddenItems expandDone={() => setHidden(false)}\r\n                                             hidden={isHidden}\r\n                                             hideDone={() => setHidden(true)}\r\n                                             hiddenCount={doneCount}\r\n                                             color={color}/>}\r\n            {isHidden || doneItemsComponents}\r\n            {activeItemsComponents}\r\n            <NewCard addTask={addTask} color={color}/>\r\n            <div className={styles.pseudoExtender}/>\r\n        </div>\r\n    </div>\r\n}\r\nexport default List\r\n","import React, {useEffect, useState} from 'react'\r\nimport styles from './Home.module.css'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {API} from \"../../API/API\";\r\nimport {CopyToClipboard} from \"react-copy-to-clipboard/lib/Component\";\r\nimport QR from \"../QR\";\r\nimport {checkColor, setForeColor, palette} from \"../../utils/Colors\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n    let [color, setColor] = useState(palette[0])\r\n    let [title, setTitle] = useState('')\r\n    let [link, setLink] = useState('')\r\n\r\n    const createList = () => {\r\n        API.createList(title !== '' ? title : 'New list', color).then(\r\n            (r) => {\r\n                setLink('/' + r.name)\r\n            }\r\n        )\r\n    }\r\n    const listenKey = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault()\r\n            createList()\r\n        }\r\n    }\r\n\r\n    const colors = palette.map(\r\n        item => {\r\n            return <div className={(color === item ? styles.colorActive : styles.color)}\r\n                        style={{backgroundColor: item}}\r\n                        onClick={() => setColor(item)}/>\r\n        }\r\n    )\r\n    if (link !== '') return <Redirect to={link}/>\r\n    return <div className={styles.wrapper}>\r\n        <div>\r\n            <SyncParams/>\r\n            <div className={styles.form}>\r\n                <div className={styles.input}>\r\n                    <input onKeyPress={listenKey} placeholder={'New List...'} value={title}\r\n                           onChange={(e) => setTitle(e.target.value)}/>\r\n                </div>\r\n                <div className={styles.colorsSection}>\r\n                    <div className={styles.colors}>\r\n                        {colors}\r\n                    </div>\r\n                </div>\r\n                <div className={styles.buttonSection}>\r\n                    <div className={styles.button} onClick={createList}>Create List</div>\r\n                </div>\r\n            </div>\r\n            <History/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst History = (props) => {\r\n\r\n    let [items, setItems] = useState([])\r\n    let [pins, setPins] = useState([])\r\n    let [historyLoaded, setHistoryLoaded] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            getPins()\r\n            getHistory()\r\n        }, []\r\n    )\r\n    const getPins = () => {\r\n        let key = localStorage.getItem('syncKey')\r\n        if (key != null) {\r\n            API.fetchPins(key).then(\r\n                r => {\r\n                    if (r != null) {\r\n                        setPins(r.pins)\r\n                        localStorage.setItem('pins', JSON.stringify(r.pins))\r\n                    } else {\r\n                        setPins([])\r\n                        localStorage.setItem('pins', JSON.stringify([]))\r\n                    }\r\n                }\r\n            )\r\n        } else {\r\n            let pins = localStorage.getItem('pins')\r\n            if (pins != null)\r\n                setPins(JSON.parse(pins))\r\n        }\r\n    }\r\n\r\n    const getHistory = () => {\r\n        let history = localStorage.getItem('history')\r\n        if (history != null)\r\n            setItems(JSON.parse(history))\r\n        setTimeout(() => {\r\n            setHistoryLoaded(true)\r\n        }, 1000)\r\n    }\r\n\r\n\r\n    let historyItems = items.map(\r\n        (el) => {\r\n            return <ListCard id={el} key={el} pin={false}/>\r\n        }\r\n    )\r\n    let pinnedItems = pins.map(\r\n        (el) => {\r\n            return <ListCard id={el} key={el} pin={true}/>\r\n        }\r\n    )\r\n\r\n    return <div className={styles.history}>\r\n        {pinnedItems}\r\n        {historyItems}\r\n        <ClearButton setItems={setItems} historyLoaded={historyLoaded} hasHistory={historyItems.length !== 0}/>\r\n    </div>\r\n}\r\n\r\nconst ListCard = (props) => {\r\n\r\n    let [listProps, setListProps] = useState({})\r\n\r\n    useEffect(() => {\r\n        getListProps()\r\n    }, [props.id])\r\n\r\n\r\n    const getListProps = () => {\r\n        API.fetchList(props.id).then(\r\n            (r) => {\r\n                if (r != null)\r\n                    setListProps({name: r.name, color: checkColor(r.color)})\r\n                else\r\n                    setListProps({name: `It's a bug ;)`, color: checkColor('')})\r\n            }\r\n        )\r\n    }\r\n\r\n    return <NavLink to={`/${props.id}`}\r\n                    style={{textDecoration: \"none\", color: \"black\"}}>\r\n        <div className={styles.itemWrapper} style={listProps.name ? {opacity: 1} : {opacity: 0}}>\r\n            <div className={styles.circle} style={setForeColor(listProps.color)}>\r\n                {listProps.color && <i className={props.pin ? 'fas fa-star' : 'fas fa-circle'}/>}\r\n            </div>\r\n            <div className={styles.listName}>{listProps.name || ''}</div>\r\n        </div>\r\n    </NavLink>\r\n}\r\n\r\nconst SyncParams = () => {\r\n    let [isSynced, setSynced] = useState(false)\r\n    let [syncKey, setSyncKey] = useState(null)\r\n    let [link, setLink] = useState('')\r\n    let [isCopied, setCopied] = useState(false)\r\n    let [isQRShown, showQR] = useState(false)\r\n    let [isHintShown, showHint] = useState(false)\r\n\r\n    useEffect(() => {\r\n        checkSync()\r\n    }, [isSynced])\r\n\r\n    const checkSync = () => {\r\n        let storedKey = localStorage.getItem('syncKey')\r\n        setSynced(storedKey != null)\r\n        setSyncKey(storedKey)\r\n        setLink(generateLink)\r\n    }\r\n\r\n    const generateLink = () => {\r\n        return window.location.href + 'sync/' + syncKey\r\n    }\r\n    const createUser = () => {\r\n        API.createUser().then(\r\n            r => {\r\n                if (r != null) {\r\n                    let localPins = JSON.parse(localStorage.getItem('pins'))\r\n                    API.setPins(r.name, localPins).then(() => {\r\n                        setSyncKey(r.name)\r\n                        setSynced(true)\r\n                        setLink(generateLink())\r\n                        localStorage.setItem('syncKey', r.name)\r\n                    })\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    return <div className={styles.syncWrapper} style={isHintShown || isQRShown ? {} : {opacity: .6}}>\r\n        {\r\n            isSynced ?\r\n                <div className={styles.isSynced}>\r\n                    <div className={styles.syncedOptions}>\r\n                        <CopyToClipboard text={link} onCopy={() => setCopied(true)}>\r\n                            <div className={styles.btn}><i\r\n                                className={isCopied ? 'fas fa-check' : 'fas fa-link'}/>{isCopied ? 'Copied' : 'Link'}\r\n                            </div>\r\n                        </CopyToClipboard>\r\n                        <div className={styles.btn} onClick={() => showQR(true)}><i className={'fas fa-qrcode'}/>QR\r\n                        </div>\r\n                        {isQRShown && <QR link={link} hideFun={() => showQR(false)}/>}\r\n                        <div className={styles.btn} onClick={() => showHint(!isHintShown)}><i\r\n                            className={isHintShown ? 'fas fa-chevron-up' : 'fas fa-chevron-down'}/>Hint\r\n                        </div>\r\n                    </div>\r\n                    {isHintShown &&\r\n                    <div className={styles.hint}>Your pinned lists are cloud stored. You can sync a new device using the\r\n                        link below. <NavLink style={{color: 'black'}} to={'/nosync'}>Disable sync</NavLink></div>}\r\n                </div>\r\n\r\n\r\n                :\r\n                <div className={styles.isSynced}>\r\n                    <div className={styles.localOptions}>\r\n\r\n                        <div className={styles.btn} onClick={createUser}><i className={'fas fa-cloud'}/>New Cloud</div>\r\n\r\n                        <div className={styles.btn} onClick={() => showHint(!isHintShown)}><i\r\n                            className={isHintShown ? 'fas fa-chevron-up' : 'fas fa-chevron-down'}/>Hint\r\n                        </div>\r\n                    </div>\r\n                    {isHintShown &&\r\n                    <div className={styles.hint}>This devise shows your local pins. Start with creating a Cloud for\r\n                        pins. You'll be able to sync your connected devices</div>}\r\n                </div>\r\n        }\r\n    </div>\r\n}\r\n\r\nconst ClearButton = (props) => {\r\n    let [cleared, setCleared] = useState(false)\r\n    let [temp, setTemp] = useState([])\r\n    let [opacity, setOpacity] = useState(1)\r\n    let [currentTimer, setCurrentTimer] = useState(0)\r\n\r\n    const saveHistory = () => {\r\n        let history = JSON.parse(localStorage.getItem('history'))\r\n        setTemp(history)\r\n    }\r\n\r\n    const restoreHistory = () => {\r\n        clearTimeout(currentTimer)\r\n        localStorage.setItem('history', JSON.stringify(temp))\r\n        props.setItems(temp)\r\n        setCleared(false)\r\n        setOpacity(1)\r\n    }\r\n\r\n    const clearHistory = () => {\r\n        saveHistory()\r\n        setCleared(true)\r\n        localStorage.removeItem('history')\r\n        props.setItems([])\r\n        setCurrentTimer(setTimeout(() => {\r\n            setOpacity(.5)\r\n            setCurrentTimer(setTimeout(() => {\r\n                setOpacity(0)\r\n                setCurrentTimer(setTimeout(() => setCleared(false),\r\n                    500))\r\n            }, 3500))\r\n        }, 2000))\r\n\r\n    }\r\n    if (!props.hasHistory && !cleared) return null\r\n\r\n    return <div className={styles.clearWrapper}\r\n                onClick={cleared ? restoreHistory : clearHistory}\r\n                style={props.historyLoaded ? {opacity: opacity} : {opacity: 0}}>\r\n\r\n        {cleared ? 'Undo' : 'Clear history'}\r\n    </div>\r\n}\r\n\r\nexport default Home\r\n","import React, {useState} from 'react'\r\nimport styles from './Sync.module.css'\r\nimport {NavLink, Redirect, useParams} from 'react-router-dom'\r\nimport logo from '../../assets/logo.png'\r\n\r\nconst Sync = (props) => {\r\n    let { id } = useParams()\r\n    let [isDone, setDone] = useState(false)\r\n    const sync = () => {\r\n       localStorage.setItem('syncKey', id)\r\n        setDone(true)\r\n    }\r\n    const noSync = () => {\r\n        localStorage.removeItem('syncKey')\r\n        setDone(true)\r\n\r\n    }\r\n    if (isDone) return <Redirect to={'/'}/>\r\n\r\n    if (props.nosync) return <div className={styles.wrapper}>\r\n        <div className={styles.form}>\r\n            <img src={logo} className={styles.logo} alt='logo'/>\r\n            <div>Note that this device will be no longer synchronized with your cloud pins.</div>\r\n            <div className={styles.btn} onClick={noSync}><i className={'fas fa-plane'}/> Disable sync</div>\r\n            <div className={styles.link}><NavLink to={'/'} style={{color: 'black'}}>Cancel</NavLink></div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n    return <div className={styles.wrapper}>\r\n        <div className={styles.form}>\r\n            <img src={logo} className={styles.logo} alt='logo'/>\r\n            <div>Your device is going to be synchronized with your cloud pins. Your local pins will be erased.</div>\r\n            <div className={styles.btn} onClick={sync}><i className={'fas fa-cloud'}/>Enable sync</div>\r\n            <div className={styles.link}><NavLink to={'/'} style={{color: 'black'}}>Cancel</NavLink></div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Sync","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\r\nimport List from \"./components/list/List\";\r\nimport Home from './components/home/Home'\r\nimport Sync from \"./components/sync/Sync\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <HashRouter>\r\n                <Switch>\r\n                    <Route exact path={'/sync/:id'} render={()=><Sync/>}/>\r\n                    <Route exact path={'/nosync'} render={()=><Sync nosync/>}/>\r\n                    <Route exact path={'/'} component={Home}/>\r\n                    <Route exact path={'/:id'} component={List}/>\r\n                </Switch>\r\n            </HashRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}