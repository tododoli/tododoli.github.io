{"version":3,"sources":["Colors.module.css","components/home/Home.module.css","components/list/List.module.css","components/card/Card.module.css","API/API.js","components/card/Card.jsx","components/list/List.jsx","components/home/Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","API","fetchList","id","get","then","r","data","addTask","text","post","done","createList","title","color","JSON","stringify","name","items","editTask","listId","taskId","task","patch","deleteTask","delete","renameList","newName","window","Options","props","className","styles","options","editMode","icon","colorF","onClick","saveFun","editFun","deleteFun","Card","useState","isOptsShown","showOpts","setEditMode","newText","setNewText","markTask","list","update","saveTask","card","active","grid","btn","textDone","textActive","onKeyPress","e","key","preventDefault","input","autoFocus","value","onChange","target","componentDecorator","decoratedHref","decoratedText","href","style","menuBtn","hideFun","markFun","Header","isCopied","setCopied","newTitle","setNewTitle","isPinned","setPinned","useEffect","pins","parse","localStorage","getItem","includes","header","titleSection","headerTitle","placeholder","link","to","cursor","titleButton","add","index","indexOf","splice","unshift","setItem","pinList","copySection","onCopy","copyLink","NewCard","cardText","setCardText","onAdd","document","querySelector","focus","inputWrapper","autoComplete","addButton","opacity","List","useParams","setItems","setTitle","colors","default","setColorF","defaultB","colorB","setColorB","setLink","location","scrollTo","top","behavior","updateHistory","history","pop","redB","red","blueB","blue","greenB","green","darkB","dark","doneItemsComponents","Object","entries","map","item","activeItemsComponents","background","resp","scrollIntoView","pseudoExtender","History","setPins","getPins","getHistory","historyItems","el","pin","pinnedItems","ListCard","listProps","setListProps","getListProps","parseColor","colorString","textDecoration","itemWrapper","circle","listName","Home","setColor","wrapper","form","colorsSection","colorActive","buttonSection","button","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"+FACAA,EAAOC,QAAU,CAAC,IAAM,oBAAoB,MAAQ,sBAAsB,KAAO,qBAAqB,KAAO,qBAAqB,QAAU,wBAAwB,KAAO,qBAAqB,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,sBAAsB,SAAW,2B,2ECAvSD,EAAOC,QAAU,CAAC,QAAU,sBAAsB,cAAgB,4BAA4B,KAAO,mBAAmB,cAAgB,4BAA4B,OAAS,qBAAqB,MAAQ,oBAAoB,YAAc,0BAA0B,MAAQ,oBAAoB,cAAgB,4BAA4B,OAAS,qBAAqB,QAAU,sBAAsB,YAAc,0BAA0B,SAAW,uBAAuB,OAAS,uB,kBCA/dD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,WAAa,yBAAyB,KAAO,mBAAmB,OAAS,qBAAqB,aAAe,2BAA2B,YAAc,0BAA0B,MAAQ,oBAAoB,YAAc,0BAA0B,YAAc,0BAA0B,SAAW,uBAAuB,aAAe,2BAA2B,MAAQ,oBAAoB,UAAY,wBAAwB,eAAiB,+B,kBCAreD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,KAAO,mBAAmB,IAAM,kBAAkB,QAAU,sBAAsB,KAAO,mBAAmB,OAAS,qBAAqB,SAAW,uBAAuB,QAAU,sBAAsB,KAAO,mBAAmB,MAAQ,sB,kJCCpRC,E,OAAWC,EAAMC,OACnB,CACIC,QAAS,0CACTC,iBAAiB,IAGZC,EAAM,CACfC,UAAW,SAACC,GACR,OAAOP,EAASQ,IAAT,kBAAwBD,EAAxB,UAAmCE,MAAK,SAAAC,GAAC,OAAEA,EAAEC,SAExDC,QAAS,SAACL,EAAIM,GACV,OAAOb,EAASc,KAAT,kBAAyBP,EAAzB,eAA0C,CAACM,KAAMA,EAAME,MAAM,IAAQN,MAAK,SAAAC,GAAC,OAAEA,EAAEC,SAE1FK,WAAY,SAACC,EAAOC,GAChB,OAAOlB,EAASc,KAAK,eAAgBK,KAAKC,UAAU,CAACC,KAAMJ,EAAOC,MAAOA,EAAOI,MAAO,MAAMb,MAAK,SAAAC,GAAC,OAAEA,EAAEC,SAE3GY,SAAU,SAACC,EAAQC,EAAQC,GACvB,OAAO1B,EAAS2B,MAAT,kBAA0BH,EAA1B,kBAA0CC,EAA1C,SAAyD,CAACZ,KAAMa,EAAKb,KAAME,KAAMW,EAAKX,OAAON,MAAK,SAAAC,GAAC,OAAEA,EAAEC,SAElHiB,WAAY,SAACJ,EAAQC,GACjB,OAAOzB,EAAS6B,OAAT,kBAA2BL,EAA3B,kBAA2CC,EAA3C,UAA0DhB,MAAK,SAAAC,GAAC,OAAEA,EAAEC,SAE/EmB,WAAY,SAACN,EAAQO,GACjB,OAAO/B,EAAS2B,MAAT,kBAA0BH,EAA1B,SAAyC,CAACH,KAAMU,IAAUtB,MAAK,SAAAC,GAAC,OAAEA,EAAEC,UAGnFqB,OAAO3B,IAAMA,E,qBCvBP4B,EAAU,SAACC,GACb,OAAO,yBAAKC,UAAWC,IAAOC,SACzBH,EAAMI,SACH,yBAAKH,UAAWC,IAAOG,KAAO,IAAML,EAAMM,OAAQC,QAASP,EAAMQ,SAC7D,uBACIP,UAAW,iBAFnB,IAEsC,QAGtC,yBAAKA,UAAWC,IAAOG,KAAO,IAAML,EAAMM,OAAQC,QAASP,EAAMS,SAC7D,uBACIR,UAAW,eAFnB,IAEoC,QAGxC,yBAAKA,UAAWC,IAAOG,KAAO,IAAML,EAAMM,OAAQC,QAASP,EAAMU,WAAW,uBAAGT,UAAU,iBAAzF,aA6EOU,EAxEF,SAACX,GAAW,IAAD,EACUY,oBAAS,GADnB,mBACfC,EADe,KACFC,EADE,OAEUF,oBAAS,GAFnB,mBAEfR,EAFe,KAELW,EAFK,OAGQH,mBAASZ,EAAMrB,MAHvB,mBAGfqC,EAHe,KAGNC,EAHM,KAQdC,EAAW,WACb/C,EAAIkB,SAASW,EAAMmB,KAAMnB,EAAM3B,GAAI,CAACM,KAAMqB,EAAMrB,KAAME,MAAOmB,EAAMnB,OAAON,MACtE,WACIyB,EAAMoB,OAAOpB,EAAMmB,UAmBzBE,EAAW,WACblD,EAAIkB,SAASW,EAAMmB,KAAMnB,EAAM3B,GAAI,CAACM,KAAMqC,EAASnC,KAAMmB,EAAMnB,OAAON,MAClE,WACIwC,GAAY,GACZf,EAAMoB,OAAOpB,EAAMmB,UAI/B,OAAO,yBAAKlB,UAAS,UAAKC,IAAOoB,KAAZ,YAAoBtB,EAAMnB,KAAOqB,IAAOrB,KAAOqB,IAAOqB,SACvE,yBAAKtB,UAAWC,IAAOsB,MACnB,yBAAKvB,UAAWC,IAAOuB,IAAM,IAAMzB,EAAMM,QAAzC,IAAoDN,EAAMnB,KAEtD,uBAAGoB,UAAU,sBAAsBM,QAASW,IAD5C,uBAAGjB,UAAU,gBAAgBM,QAASW,KAE1C,yBACIjB,UAAWD,EAAMnB,KAAOqB,IAAOwB,SAAWxB,IAAOyB,YACjDvB,EAEI,2BAAOwB,WAxBL,SAACC,GACD,UAAVA,EAAEC,MACFD,EAAEE,iBACFV,MAqBsCpB,UAAWC,IAAO8B,MACzCC,WAAW,EAAMC,MAAOlB,EACxBmB,SAAU,SAACN,GACPZ,EAAWY,EAAEO,OAAOF,UAG/B,kBAAC,IAAD,CAASG,mBAAoB,SAACC,EAAeC,EAAeT,GAA/B,OACzB,uBAAGM,OAAO,QAAQI,KAAMF,EAAeR,IAAKA,EAAKW,MAAO,CAACzD,MAAO,UAC3D,UAGL,8BAAOgB,EAAMrB,QAGzB,yBAAKsB,UAAWC,IAAOuB,IAAM,IAAMzB,EAAMM,QAAQ,uBAC7CjC,GAAI6B,IAAOwC,QACXzC,UAAyB,oBACzBM,QAAS,kBAAMO,GAAUD,QAEhCA,GAAe,kBAAC,EAAD,CACZP,OAAQN,EAAMM,OAAQqC,QA9DV,WAChB7B,GAAS,IA6DuC8B,QAAS1B,EACrDR,UArDW,WACfvC,EAAIuB,WAAWM,EAAMmB,KAAMnB,EAAM3B,IAAIE,MACjC,WACIyB,EAAMoB,OAAOpB,EAAMmB,UAkDAf,SAAUA,EACjCK,QAAS,kBAAMM,GAAY,IAAOP,QAASa,M,wBCpFjDwB,EAAS,SAAC7C,GAAW,IAAD,EACMY,oBAAS,GADf,mBACjBkC,EADiB,KACPC,EADO,OAEQnC,oBAAS,GAFjB,mBAEjBR,EAFiB,KAEPW,EAFO,OAGQH,mBAASZ,EAAMjB,OAHvB,mBAGjBiE,EAHiB,KAGPC,EAHO,OAIMrC,oBAAS,GAJf,mBAIjBsC,EAJiB,KAIPC,EAJO,KAMtBC,qBACI,WACI,IAAIC,EAAOpE,KAAKqE,MAAMC,aAAaC,QAAQ,SAC3CP,EAAYjD,EAAMjB,OAClBoE,EAAmB,OAATE,GAAiBA,EAAKI,SAASzD,EAAMV,WAChD,CAACU,EAAMV,OAAQ4D,EAAUlD,EAAMjB,QA8BtC,OAAO,yBAAKkB,UAAWC,IAAOwD,QAC1B,yBAAKzD,UAAWC,IAAOyD,cACnB,yBAAK1D,UAAWC,IAAO0D,aAClBxD,EAEG,2BAAO6B,WAAW,EAAM4B,YAAa,eAAgB1B,SAAU,SAACN,GAC5DoB,EAAYpB,EAAEO,OAAOF,QAElBA,MAAOc,IAEd,yBAAK/C,UAAWC,IAAOnB,OAAO,kBAAC,IAAD,CAASkB,UAAWC,IAAO4D,KAAO,IAAM9D,EAAMhB,MACrC+E,GAAI,KAAM,aAC7C,0BAAMxD,QAAS,kBAAMQ,GAAY,IAAO0B,MAAO,CAACuB,OAAQ,YAAahE,EAAMjB,QAAiB,KAIvGqB,GAAY,yBAAKH,UAAWC,IAAO+D,aAChC,uBACIhE,UAAW,eACXM,QA3BD,WACXpC,EAAIyB,WAAWI,EAAMV,OAAqB,KAAb0D,EAAkBhD,EAAMjB,MAAQiE,GAAUzE,MAAK,WACxEwC,GAAY,GACZf,EAAMoB,OAAOpB,EAAMV,gBA0BjBc,GAAY,yBAAKH,UAAWC,IAAO+D,YAAa1D,QAAS,YAhDnD,SAAC2D,GACb,IAAIb,EAAOpE,KAAKqE,MAAMC,aAAaC,QAAQ,SAG3C,GAFa,OAATH,IAAeA,EAAO,IAEtBA,EAAKI,SAASzD,EAAMV,QAAS,CAC7B,IAAI6E,EAAQd,EAAKe,QAAQpE,EAAMV,QAC/B+D,EAAKgB,OAAOF,EAAO,GAEnBD,GACAb,EAAKiB,QAAQtE,EAAMV,QACnB6D,GAAU,IAGVA,GAAU,GAEdI,aAAagB,QAAQ,OAAQtF,KAAKC,UAAUmE,IAC5CrD,EAAMoB,OAAOpB,EAAMV,QAgCiDkF,EAAStB,KACrE,uBACIjD,UAAWiD,EAAW,cAAgB,kBAIlD,yBAAKjD,UAAWC,IAAOuE,aACnB,kBAAC,kBAAD,CAAiB9F,KAAMqB,EAAM8D,KAAMY,OAAQ,kBAAM3B,GAAU,KACvD,yBAAK9C,UAAWC,IAAOyE,UACnB,uBAAG1E,UAAW6C,EAAW,eAAiB,qBAOxD8B,EAAU,SAAC5E,GAAW,IAAD,EACOY,mBAAS,IADhB,mBAClBiE,EADkB,KACRC,EADQ,KAMjBC,EAAQ,WACO,KAAbF,IACJ7E,EAAMtB,QAAQmG,GACdC,EAAY,IACZE,SAASC,cAAc,UAAUC,UAUrC,OAAO,yBAAKjF,UAAWC,IAAOiF,aAAc9G,GAAI,WAC5C,2BAAO+G,aAAa,MAAM/G,GAAI,QAASwF,YAAY,cAAc5D,UAAWC,IAAO8B,MAAOE,MAAO2C,EAC1F1C,SApBS,SAACN,GACjBiD,EAAYjD,EAAEO,OAAOF,QAmBSN,WAThB,SAACC,GACD,UAAVA,EAAEC,MACFD,EAAEE,iBACFgD,QAOJ,yBAAK9E,UAAWC,IAAOmF,UAAY,IAAMrF,EAAMhB,MAAOyD,MAAoB,KAAboC,EAAkB,CAACS,QAAS,GAAK,CAACA,QAAS,IACnG/E,QAASwE,GAAO,uBAAG9E,UAAU,0BA2G3BsF,EAvGF,WAAO,IACXlH,EAAMmH,cAANnH,GADU,EAESuC,mBAAS,IAFlB,mBAEVxB,EAFU,KAEHqG,EAFG,OAGS7E,mBAAS,IAHlB,mBAGV7B,EAHU,KAGH2G,EAHG,OAIW9E,mBAAS+E,IAAOC,SAJ3B,mBAIVtF,EAJU,KAIFuF,EAJE,OAKWjF,mBAAS+E,IAAOG,UAL3B,mBAKVC,EALU,KAKFC,EALE,OAMOpF,mBAAS,IANhB,mBAMVkD,EANU,KAMJmC,EANI,KAQf7C,qBACI,WACI6C,EAAQnG,OAAOoG,SAAS1D,MACxB1C,OAAOqG,SAAS,CAACC,IAAK,EAAGC,SAAU,aAEpC,IAGPjD,qBACI,WACIhF,EAAUC,KACX,CAACA,IAGR,IAAMiI,EAAgB,WAClB,IAAIC,EAAUtH,KAAKqE,MAAMC,aAAaC,QAAQ,YAC1CH,EAAOpE,KAAKqE,MAAMC,aAAaC,QAAQ,SAI3C,GAHa,OAATH,IAAeA,EAAO,IACV,OAAZkD,IAAkBA,EAAU,IAE5BA,EAAQ9C,SAASpF,GAAK,CACtB,IAAI8F,EAAQoC,EAAQnC,QAAQ/F,GAC5BkI,EAAQlC,OAAOF,EAAO,GAG1B,GAAKd,EAAKI,SAASpF,GACd,CACD,IAAI8F,EAAQd,EAAKe,QAAQ/F,GACzBgF,EAAKgB,OAAOF,EAAO,GACnBd,EAAKiB,QAAQjG,GACbkF,aAAagB,QAAQ,OAAQtF,KAAKC,UAAUmE,SALxBkD,EAAQjC,QAAQjG,GAAM,IAAMkI,EAAQC,MAO5DjD,aAAagB,QAAQ,UAAWtF,KAAKC,UAAUqH,KAK7CnI,EAAY,SAACC,GACfF,EAAIC,UAAUC,GAAIE,MAAK,SAAAC,GAGnB,GAFA8H,IAES,MAAL9H,EAGJ,OAFAiH,EAASjH,EAAEY,OACXsG,EAASlH,EAAEW,MACHX,EAAEQ,OACN,IAAK,MACDgH,EAAUL,IAAOc,MACjBZ,EAAUF,IAAOe,KACjB,MACJ,IAAK,OACDV,EAAUL,IAAOgB,OACjBd,EAAUF,IAAOiB,MACjB,MACJ,IAAK,QACDZ,EAAUL,IAAOkB,QACjBhB,EAAUF,IAAOmB,OACjB,MACJ,IAAK,OACDd,EAAUL,IAAOoB,OACjBlB,EAAUF,IAAOqB,MACjB,MACJ,QACIhB,EAAUL,IAAOG,UACjBD,EAAUF,IAAOC,cAa3BqB,EAAsB7H,EAAQ8H,OAAOC,QAAQ/H,GAAOgI,KAAI,YAAkB,IAAD,mBAAftF,EAAe,KAAVuF,EAAU,KAC3E,GAAIA,EAAKxI,KAAM,OAAO,kBAAC,EAAD,CAAMyB,OAAQA,EAAQzB,KAAMwI,EAAKxI,KAAMF,KAAM0I,EAAK1I,KAAMmD,IAAKA,EAAKzD,GAAIyD,EAAKX,KAAM9C,EAC3E+C,OAAQhD,OACnC,KACCkJ,EAAwBlI,EAAQ8H,OAAOC,QAAQ/H,GAAOgI,KAAI,YAAkB,IAAD,mBAAftF,EAAe,KAAVuF,EAAU,KAC7E,IAAKA,EAAKxI,KAAM,OAAO,kBAAC,EAAD,CAAMyB,OAAQA,EAAQzB,KAAMwI,EAAKxI,KAAMF,KAAM0I,EAAK1I,KAAMmD,IAAKA,EAAKzD,GAAIyD,EAAKX,KAAM9C,EAC3E+C,OAAQhD,OACpC,KAEL,OAAO,yBAAK6B,UAAS,UAAKC,IAAOqH,WAAZ,YAA0BxB,IAC3C,kBAAC,EAAD,CAAQhH,MAAOA,EAAOO,OAAQjB,EAAI+C,OAAQhD,EAAW0F,KAAMA,EAAM9E,MAAOsB,IACxE,yBAAKL,UAAWC,IAAOiB,MAClB8F,EACAK,EACD,kBAAC,EAAD,CAAS5I,QAvBD,SAACC,GACbR,EAAIO,QAAQL,EAAIM,GAAMJ,MAClB,SAACiJ,GACGA,EAAKrI,MAAQf,EAAUC,GACvB2G,SAASC,cAAc,YAAYwC,eAAe,CAACpB,SAAU,aAmBtCrH,MAAOsB,IAClC,yBAAKL,UAAWC,IAAOwH,oB,gBC7J7BC,EAAU,SAAC3H,GAAW,IAAD,EAECY,mBAAS,IAFV,mBAElBxB,EAFkB,KAEXqG,EAFW,OAGD7E,mBAAS,IAHR,mBAGlByC,EAHkB,KAGZuE,EAHY,KAIvBxE,qBACI,WACIyE,IACAC,MACD,IAEP,IAAMD,EAAU,WACZ,IAAIxE,EAAOE,aAAaC,QAAQ,QACpB,MAARH,GACAuE,EAAQ3I,KAAKqE,MAAMD,KAGrByE,EAAa,WACf,IAAIvB,EAAUhD,aAAaC,QAAQ,WACpB,MAAX+C,GACAd,EAASxG,KAAKqE,MAAMiD,KAGxBwB,EAAe3I,EAAMgI,KACrB,SAACY,GACG,OAAO,kBAAC,EAAD,CAAU3J,GAAI2J,EAAIlG,IAAKkG,EAAIC,KAAK,OAG3CC,EAAc7E,EAAK+D,KACnB,SAACY,GACG,OAAO,kBAAC,EAAD,CAAU3J,GAAI2J,EAAIlG,IAAKkG,EAAIC,KAAK,OAI/C,OAAO,yBAAKhI,UAAWC,IAAOqG,SACzB2B,EACAH,IAIHI,EAAW,SAACnI,GAAW,IAAD,EAEQY,mBAAS,IAFjB,mBAEnBwH,EAFmB,KAERC,EAFQ,KAIxBjF,qBAAU,WACNkF,MACD,CAACtI,EAAM3B,KAEV,IAAMkK,EAAa,SAACC,GAChB,OAAQA,GACJ,IAAK,MACD,OAAO7C,IAAOe,IAClB,IAAK,QACD,OAAOf,IAAOmB,MAClB,IAAK,OACD,OAAOnB,IAAOqB,KAClB,IAAK,OACD,OAAOrB,IAAOiB,KAClB,QACI,OAAOjB,IAAOC,UAIpB0C,EAAe,WACjBnK,EAAIC,UAAU4B,EAAM3B,IAAIE,MACpB,SAACC,GAEO6J,EADK,MAAL7J,EACa,CAACW,KAAMX,EAAEW,KAAMH,MAAOuJ,EAAW/J,EAAEQ,QAEnC,CAACG,KAAK,kBAAoBH,MAAO2G,IAAOC,cAKrE,OAAO,kBAAC,IAAD,CAAS7B,GAAE,WAAM/D,EAAM3B,IACdoE,MAAO,CAACgG,eAAgB,OAAQzJ,MAAO,UACnD,yBAAKiB,UAAWC,IAAOwI,YAAajG,MAAO2F,EAAUjJ,KAAO,CAACmG,QAAS,GAAG,CAACA,QAAS,IAC/E,yBAAKrF,UAAWC,IAAOyI,OAAS,IAAMP,EAAUpJ,OAC3CoJ,EAAUpJ,OAAS,uBAAGiB,UAAWD,EAAMiI,IAAM,cAAe,mBAEjE,yBAAKhI,UAAWC,IAAO0I,UAAWR,EAAUjJ,MAAQ,OAKjD0J,EArIF,WAAO,IAAD,EAESjI,mBAAS,OAFlB,mBAEV5B,EAFU,KAEH8J,EAFG,OAGSlI,mBAAS,IAHlB,mBAGV7B,EAHU,KAGH2G,EAHG,OAIO9E,mBAAS,IAJhB,mBAIVkD,EAJU,KAIJmC,EAJI,KAMTnH,EAAa,WACfX,EAAIW,WAAqB,KAAVC,EAAeA,EAAQ,WAAYC,GAAOT,MACrD,SAACC,GACGyH,EAAQ,IAAMzH,EAAEW,UAW5B,MAAa,KAAT2E,EAAoB,kBAAC,IAAD,CAAUC,GAAID,IAC/B,yBAAK7D,UAAWC,IAAO6I,SAC1B,6BACI,yBAAK9I,UAAWC,IAAO8I,MACnB,yBAAK/I,UAAWC,IAAO8B,OACnB,2BAAOJ,WAZL,SAACC,GACD,UAAVA,EAAEC,MACFD,EAAEE,iBACFjD,MASsC+E,YAAa,cAAe3B,MAAOnD,EAC1DoD,SAAU,SAACN,GAAD,OAAO6D,EAAS7D,EAAEO,OAAOF,WAE9C,yBAAKjC,UAAWC,IAAO+I,eACnB,yBAAKhJ,UAAWC,IAAOyF,QACnB,yBAAK1F,WAAsB,QAAVjB,EAAkBkB,IAAOgJ,YAAchJ,IAAOlB,OAAS,IAAM2G,IAAOc,KAChFlG,QAAS,kBAAMuI,EAAS,UAC7B,yBAAK7I,WAAsB,UAAVjB,EAAoBkB,IAAOgJ,YAAchJ,IAAOlB,OAAS,IAAM2G,IAAOkB,OAClFtG,QAAS,kBAAMuI,EAAS,YAC7B,yBAAK7I,WAAsB,SAAVjB,EAAmBkB,IAAOgJ,YAAchJ,IAAOlB,OAAS,IAAM2G,IAAOgB,MACjFpG,QAAS,kBAAMuI,EAAS,WAC7B,yBAAK7I,WAAsB,SAAVjB,EAAmBkB,IAAOgJ,YAAchJ,IAAOlB,OAAS,IAAM2G,IAAOoB,MACjFxG,QAAS,kBAAMuI,EAAS,aAGrC,yBAAK7I,UAAWC,IAAOiJ,eACnB,yBAAKlJ,UAAWC,IAAOkJ,OAAQ7I,QAASzB,GAAxC,iBAGR,kBAAC,EAAD,SClCGuK,EAXH,WACV,OACE,yBAAKpJ,UAAU,OACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqJ,OAAK,EAACC,KAAM,IAAKC,UAAWX,IACnC,kBAAC,IAAD,CAAOS,OAAK,EAACC,KAAM,OAAQC,UAAWjE,O,MCCxBkE,QACW,cAA7B3J,OAAOoG,SAASwD,UAEe,UAA7B5J,OAAOoG,SAASwD,UAEhB5J,OAAOoG,SAASwD,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF9E,SAAS+E,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB3L,MAAK,SAAA4L,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.90bc2b1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"Colors_red__2umzL\",\"green\":\"Colors_green__26MeA\",\"blue\":\"Colors_blue__3RJOr\",\"dark\":\"Colors_dark__1UBtV\",\"default\":\"Colors_default__1OxFX\",\"redB\":\"Colors_redB__3E4Kk\",\"greenB\":\"Colors_greenB__VAT1Q\",\"blueB\":\"Colors_blueB__1Wfjx\",\"darkB\":\"Colors_darkB__31ZA4\",\"defaultB\":\"Colors_defaultB__XvoLG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Home_wrapper__21I8r\",\"AnimationName\":\"Home_AnimationName__129wy\",\"form\":\"Home_form__2PVZc\",\"colorsSection\":\"Home_colorsSection__1qhpQ\",\"colors\":\"Home_colors__Wn3v2\",\"color\":\"Home_color__SxRST\",\"colorActive\":\"Home_colorActive__TtI0C\",\"input\":\"Home_input__g22eg\",\"buttonSection\":\"Home_buttonSection__3IyhQ\",\"button\":\"Home_button__2bu16\",\"history\":\"Home_history__BbYal\",\"itemWrapper\":\"Home_itemWrapper__15sR6\",\"listName\":\"Home_listName__yPDAa\",\"circle\":\"Home_circle__3OO7o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3Y7K_\",\"background\":\"List_background__38Tqr\",\"link\":\"List_link__3S9sQ\",\"header\":\"List_header__1dY2M\",\"titleSection\":\"List_titleSection__2ygVl\",\"headerTitle\":\"List_headerTitle__1KaA3\",\"title\":\"List_title__2nKQA\",\"titleButton\":\"List_titleButton__2bwLa\",\"copySection\":\"List_copySection__3tSQk\",\"copyLink\":\"List_copyLink__2y28D\",\"inputWrapper\":\"List_inputWrapper__haad0\",\"input\":\"List_input__1a24L\",\"addButton\":\"List_addButton__2tGz8\",\"pseudoExtender\":\"List_pseudoExtender__1oyS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3MKhb\",\"grid\":\"Card_grid__3qjAA\",\"btn\":\"Card_btn__1icHr\",\"menuBtn\":\"Card_menuBtn__3nbt5\",\"done\":\"Card_done__1-s6X\",\"active\":\"Card_active__2XdAX\",\"textDone\":\"Card_textDone__6XGo6\",\"options\":\"Card_options__2zSzB\",\"icon\":\"Card_icon__38c_C\",\"input\":\"Card_input__1HGG_\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create(\r\n    {\r\n        baseURL: \"https://todo-list-4b27a.firebaseio.com/\",\r\n        withCredentials: false\r\n    }\r\n)\r\nexport const API = {\r\n    fetchList: (id) => {\r\n        return instance.get(`storage/${id}.json`).then(r=>r.data)\r\n    },\r\n    addTask: (id, text) => {\r\n        return instance.post(`storage/${id}/items.json`, {text: text, done: false}).then(r=>r.data)\r\n    },\r\n    createList: (title, color) => {\r\n        return instance.post('storage.json', JSON.stringify({name: title, color: color, items: []})).then(r=>r.data)\r\n    },\r\n    editTask: (listId, taskId, task) => {\r\n        return instance.patch(`storage/${listId}/items/${taskId}.json`, {text: task.text, done: task.done}).then(r=>r.data)\r\n    },\r\n    deleteTask: (listId, taskId) => {\r\n        return instance.delete(`storage/${listId}/items/${taskId}.json`).then(r=>r.data)\r\n    },\r\n    renameList: (listId, newName) => {\r\n        return instance.patch(`storage/${listId}.json`, {name: newName}).then(r=>r.data)\r\n    }\r\n}\r\nwindow.API = API;\r\n\r\n","import React, {useState} from 'react'\r\nimport styles from './Card.module.css'\r\nimport {API} from \"../../API/API\";\r\nimport Linkify from \"react-linkify\"\r\n\r\nconst Options = (props) => {\r\n    return <div className={styles.options}>\r\n        {props.editMode ?\r\n            <div className={styles.icon + ' ' + props.colorF} onClick={props.saveFun}>\r\n                <i\r\n                    className={'fas fa-check'}/> {'Save'}\r\n            </div>\r\n            :\r\n            <div className={styles.icon + ' ' + props.colorF} onClick={props.editFun}>\r\n                <i\r\n                    className={'fas fa-pen'}/> {'Edit'}\r\n            </div>\r\n        }\r\n        <div className={styles.icon + ' ' + props.colorF} onClick={props.deleteFun}><i className='fas fa-trash'/> Delete\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Card = (props) => {\r\n    let [isOptsShown, showOpts] = useState(false)\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [newText, setNewText] = useState(props.text)\r\n\r\n    const hideOptions = () => {\r\n        showOpts(false)\r\n    }\r\n    const markTask = () => {\r\n        API.editTask(props.list, props.id, {text: props.text, done: !props.done}).then(\r\n            () => {\r\n                props.update(props.list)\r\n            }\r\n        )\r\n    }\r\n    const deleteTask = () => {\r\n        API.deleteTask(props.list, props.id).then(\r\n            () => {\r\n                props.update(props.list)\r\n            }\r\n        )\r\n    }\r\n\r\n    const listenKey = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault()\r\n            saveTask()\r\n        }\r\n    }\r\n\r\n    const saveTask = () => {\r\n        API.editTask(props.list, props.id, {text: newText, done: props.done}).then(\r\n            () => {\r\n                setEditMode(false)\r\n                props.update(props.list)\r\n            }\r\n        )\r\n    }\r\n    return <div className={`${styles.card} ${props.done ? styles.done : styles.active}`}>\r\n        <div className={styles.grid}>\r\n            <div className={styles.btn + ' ' + props.colorF}> {!props.done ?\r\n                <i className='far fa-circle' onClick={markTask}/> :\r\n                <i className='fas fa-check-circle' onClick={markTask}/>}</div>\r\n            <div\r\n                className={props.done ? styles.textDone : styles.textActive}>{\r\n                editMode\r\n                    ?\r\n                    <input onKeyPress={listenKey} className={styles.input}\r\n                           autoFocus={true} value={newText}\r\n                           onChange={(e) => {\r\n                               setNewText(e.target.value)\r\n                           }}/>\r\n                    :\r\n                    <Linkify componentDecorator={(decoratedHref, decoratedText, key) => (\r\n                        <a target=\"blank\" href={decoratedHref} key={key} style={{color: \"black\"}}>\r\n                            {'Link'}\r\n                        </a>\r\n                    )}>\r\n                        <span>{props.text}</span>\r\n                    </Linkify>}\r\n            </div>\r\n            <div className={styles.btn + ' ' + props.colorF}><i\r\n                id={styles.menuBtn}\r\n                className={isOptsShown ? 'fas fa-ellipsis-h' : 'fas fa-ellipsis-h'}\r\n                onClick={() => showOpts(!isOptsShown)}/></div>\r\n        </div>\r\n        {isOptsShown && <Options\r\n            colorF={props.colorF} hideFun={hideOptions} markFun={markTask}\r\n            deleteFun={deleteTask} editMode={editMode}\r\n            editFun={() => setEditMode(true)} saveFun={saveTask}/>}\r\n    </div>\r\n}\r\nexport default Card","import React, {useEffect, useState} from 'react'\r\nimport styles from './List.module.css'\r\nimport Card from \"../card/Card\";\r\nimport {NavLink, useParams} from 'react-router-dom'\r\nimport {API} from \"../../API/API\";\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport colors from './../../Colors.module.css'\r\n\r\nconst Header = (props) => {\r\n    let [isCopied, setCopied] = useState(false)\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [newTitle, setNewTitle] = useState(props.title)\r\n    let [isPinned, setPinned] = useState(false)\r\n\r\n    useEffect(\r\n        () => {\r\n            let pins = JSON.parse(localStorage.getItem('pins'))\r\n            setNewTitle(props.title)\r\n            setPinned(pins !== null && pins.includes(props.listId))\r\n        }, [props.listId, isPinned, props.title]\r\n    )\r\n\r\n    const pinList = (add) => {\r\n        let pins = JSON.parse(localStorage.getItem('pins'))\r\n        if (pins === null) pins = []\r\n\r\n        if (pins.includes(props.listId)) {\r\n            let index = pins.indexOf(props.listId);\r\n            pins.splice(index, 1);\r\n        }\r\n        if (add) {\r\n            pins.unshift(props.listId) //> 100 && pins.pop() //I'm not sure if I need to limit pins\r\n            setPinned(true)\r\n        }\r\n        else\r\n            setPinned(false)\r\n\r\n        localStorage.setItem('pins', JSON.stringify(pins))\r\n        props.update(props.listId)\r\n    }\r\n\r\n    const rename = () => {\r\n        API.renameList(props.listId, newTitle === '' ? props.title : newTitle).then(() => {\r\n            setEditMode(false)\r\n            props.update(props.listId)\r\n        })\r\n    }\r\n\r\n\r\n    return <div className={styles.header}>\r\n        <div className={styles.titleSection}>\r\n            <div className={styles.headerTitle}>\r\n                {editMode\r\n                    ?\r\n                    <input autoFocus={true} placeholder={'New title...'} onChange={(e) => {\r\n                        setNewTitle(e.target.value)\r\n                    }}\r\n                           value={newTitle}/>\r\n                    :\r\n                    <div className={styles.title}><NavLink className={styles.link + ' ' + props.color}\r\n                                                           to={'/'}>{'ToDoDoLi:'}</NavLink>{\r\n                        <span onClick={() => setEditMode(true)} style={{cursor: \"pointer\"}}>{props.title}</span> || ''}\r\n                    </div>\r\n                }\r\n            </div>\r\n            {editMode && <div className={styles.titleButton}>\r\n                <i\r\n                    className={'fas fa-check'}\r\n                    onClick={rename}/>\r\n            </div>}\r\n            {!editMode && <div className={styles.titleButton} onClick={()=>{pinList(!isPinned); }}>\r\n                <i\r\n                    className={isPinned ? 'fas fa-star' : 'far fa-star'}\r\n                />\r\n            </div>}\r\n        </div>\r\n        <div className={styles.copySection}>\r\n            <CopyToClipboard text={props.link} onCopy={() => setCopied(true)}>\r\n                <div className={styles.copyLink}>\r\n                    <i className={isCopied ? 'fas fa-check' : 'fas fa-link'}/>\r\n                </div>\r\n            </CopyToClipboard>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst NewCard = (props) => {\r\n    let [cardText, setCardText] = useState('')\r\n    const updateInput = (e) => {\r\n        setCardText(e.target.value)\r\n    }\r\n\r\n    const onAdd = () => {\r\n        if (cardText === '') return\r\n        props.addTask(cardText)\r\n        setCardText('')\r\n        document.querySelector('#input').focus()\r\n\r\n    }\r\n    const listenKey = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault()\r\n            onAdd()\r\n        }\r\n    }\r\n\r\n    return <div className={styles.inputWrapper} id={'addCard'}>\r\n        <input autoComplete=\"off\" id={'input'} placeholder='New task...' className={styles.input} value={cardText}\r\n               onChange={updateInput} onKeyPress={listenKey}/>\r\n        <div className={styles.addButton + ' ' + props.color} style={cardText !== '' ? {opacity: 1} : {opacity: .6}}\r\n             onClick={onAdd}><i className='fas fa-plus-circle'/></div>\r\n    </div>\r\n}\r\n\r\nconst List = () => {\r\n    let {id} = useParams()\r\n    let [items, setItems] = useState({})\r\n    let [title, setTitle] = useState('')\r\n    let [colorF, setColorF] = useState(colors.default) // Yeah I know how weird it is\r\n    let [colorB, setColorB] = useState(colors.defaultB)\r\n    let [link, setLink] = useState('')\r\n\r\n    useEffect(\r\n        () => {\r\n            setLink(window.location.href)\r\n            window.scrollTo({top: 0, behavior: \"smooth\"})\r\n\r\n        }, []\r\n    )\r\n\r\n    useEffect(\r\n        () => {\r\n            fetchList(id)\r\n        }, [id]\r\n    )\r\n\r\n    const updateHistory = () => {\r\n        let history = JSON.parse(localStorage.getItem('history'))\r\n        let pins = JSON.parse(localStorage.getItem('pins'))\r\n        if (pins === null) pins = []\r\n        if (history === null) history = []\r\n\r\n        if (history.includes(id)) {\r\n            let index = history.indexOf(id);\r\n            history.splice(index, 1);\r\n\r\n        }\r\n        if (!pins.includes(id)) history.unshift(id) > 10 && history.pop()\r\n        else {\r\n            let index = pins.indexOf(id);\r\n            pins.splice(index, 1);\r\n            pins.unshift(id)\r\n            localStorage.setItem('pins', JSON.stringify(pins))\r\n        }\r\n        localStorage.setItem('history', JSON.stringify(history))\r\n\r\n    }\r\n\r\n\r\n    const fetchList = (id) => {\r\n        API.fetchList(id).then(r => {\r\n            updateHistory()\r\n\r\n            if (r == null) return\r\n            setItems(r.items)\r\n            setTitle(r.name)\r\n            switch (r.color) {\r\n                case 'red':\r\n                    setColorB(colors.redB)\r\n                    setColorF(colors.red)\r\n                    break\r\n                case 'blue':\r\n                    setColorB(colors.blueB)\r\n                    setColorF(colors.blue)\r\n                    break\r\n                case 'green':\r\n                    setColorB(colors.greenB)\r\n                    setColorF(colors.green)\r\n                    break\r\n                case 'dark':\r\n                    setColorB(colors.darkB)\r\n                    setColorF(colors.dark)\r\n                    break\r\n                default:\r\n                    setColorB(colors.defaultB)\r\n                    setColorF(colors.default)\r\n            }\r\n        })\r\n    }\r\n    const addTask = (text) => {\r\n        API.addTask(id, text).then(\r\n            (resp) => {\r\n                resp.name && fetchList(id)\r\n                document.querySelector('#addCard').scrollIntoView({behavior: \"auto\"})\r\n            }\r\n        )\r\n    }\r\n\r\n    const doneItemsComponents = items ? Object.entries(items).map(([key, item]) => {\r\n        if (item.done) return <Card colorF={colorF} done={item.done} text={item.text} key={key} id={key} list={id}\r\n                                    update={fetchList}/>\r\n    }) : null\r\n    const activeItemsComponents = items ? Object.entries(items).map(([key, item]) => {\r\n        if (!item.done) return <Card colorF={colorF} done={item.done} text={item.text} key={key} id={key} list={id}\r\n                                     update={fetchList}/>\r\n    }) : null\r\n\r\n    return <div className={`${styles.background} ${colorB}`}>\r\n        <Header title={title} listId={id} update={fetchList} link={link} color={colorF}/>\r\n        <div className={styles.list}>\r\n            {doneItemsComponents}\r\n            {activeItemsComponents}\r\n            <NewCard addTask={addTask} color={colorF}/>\r\n            <div className={styles.pseudoExtender}/>\r\n        </div>\r\n    </div>\r\n}\r\nexport default List","import React, {useEffect, useState} from 'react'\r\nimport styles from './Home.module.css'\r\nimport colors from '../../Colors.module.css'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {API} from \"../../API/API\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n    let [color, setColor] = useState('red')\r\n    let [title, setTitle] = useState('')\r\n    let [link, setLink] = useState('')\r\n\r\n    const createList = () => {\r\n        API.createList(title !== '' ? title : 'New list', color).then(\r\n            (r) => {\r\n                setLink('/' + r.name)\r\n            }\r\n        )\r\n    }\r\n    const listenKey = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault()\r\n            createList()\r\n        }\r\n    }\r\n\r\n    if (link !== '') return <Redirect to={link}/>\r\n    return <div className={styles.wrapper}>\r\n        <div>\r\n            <div className={styles.form}>\r\n                <div className={styles.input}>\r\n                    <input onKeyPress={listenKey} placeholder={'New List...'} value={title}\r\n                           onChange={(e) => setTitle(e.target.value)}/>\r\n                </div>\r\n                <div className={styles.colorsSection}>\r\n                    <div className={styles.colors}>\r\n                        <div className={(color === 'red' ? styles.colorActive : styles.color) + ' ' + colors.redB}\r\n                             onClick={() => setColor('red')}/>\r\n                        <div className={(color === 'green' ? styles.colorActive : styles.color) + ' ' + colors.greenB}\r\n                             onClick={() => setColor('green')}/>\r\n                        <div className={(color === 'blue' ? styles.colorActive : styles.color) + ' ' + colors.blueB}\r\n                             onClick={() => setColor('blue')}/>\r\n                        <div className={(color === 'dark' ? styles.colorActive : styles.color) + ' ' + colors.darkB}\r\n                             onClick={() => setColor('dark')}/>\r\n                    </div>\r\n                </div>\r\n                <div className={styles.buttonSection}>\r\n                    <div className={styles.button} onClick={createList}>Create List</div>\r\n                </div>\r\n            </div>\r\n            <History/>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst History = (props) => {\r\n\r\n    let [items, setItems] = useState([])\r\n    let [pins, setPins] = useState([])\r\n    useEffect(\r\n        () => {\r\n            getPins()\r\n            getHistory()\r\n        }, []\r\n    )\r\n    const getPins = () => {\r\n        let pins = localStorage.getItem('pins')\r\n        if (pins != null)\r\n            setPins(JSON.parse(pins))\r\n    }\r\n\r\n    const getHistory = () => {\r\n        let history = localStorage.getItem('history')\r\n        if (history != null)\r\n            setItems(JSON.parse(history))\r\n    }\r\n\r\n    let historyItems = items.map(\r\n        (el) => {\r\n            return <ListCard id={el} key={el} pin={false}/>\r\n        }\r\n    )\r\n    let pinnedItems = pins.map(\r\n        (el) => {\r\n            return <ListCard id={el} key={el} pin={true}/>\r\n        }\r\n    )\r\n\r\n    return <div className={styles.history}>\r\n        {pinnedItems}\r\n        {historyItems}\r\n    </div>\r\n}\r\n\r\nconst ListCard = (props) => {\r\n\r\n    let [listProps, setListProps] = useState({})\r\n\r\n    useEffect(() => {\r\n        getListProps()\r\n    }, [props.id])\r\n\r\n    const parseColor = (colorString) => {\r\n        switch (colorString) {\r\n            case 'red':\r\n                return colors.red\r\n            case 'green':\r\n                return colors.green\r\n            case 'dark':\r\n                return colors.dark\r\n            case 'blue':\r\n                return colors.blue\r\n            default:\r\n                return colors.default\r\n        }\r\n    }\r\n\r\n    const getListProps = () => {\r\n        API.fetchList(props.id).then(\r\n            (r) => {\r\n                if (r != null)\r\n                    setListProps({name: r.name, color: parseColor(r.color)})\r\n                else\r\n                    setListProps({name: `It's a bug, lol`, color: colors.default})\r\n            }\r\n        )\r\n    }\r\n\r\n    return <NavLink to={`/${props.id}`}\r\n                    style={{textDecoration: \"none\", color: \"black\"}}>\r\n        <div className={styles.itemWrapper} style={listProps.name ? {opacity: 1}:{opacity: 0}}>\r\n            <div className={styles.circle + ' ' + listProps.color}>\r\n                {listProps.color && <i className={props.pin ? 'fas fa-star': 'fas fa-circle'}/>}\r\n            </div>\r\n            <div className={styles.listName}>{listProps.name || ''}</div>\r\n        </div>\r\n    </NavLink>\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport './App.css';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport List from \"./components/list/List\";\nimport Home from './components/home/Home'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n    <HashRouter>\n      <Route exact path={'/'} component={Home}/>\n      <Route exact path={'/:id'} component={List}/>\n    </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}