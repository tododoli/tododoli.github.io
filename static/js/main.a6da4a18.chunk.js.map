{"version":3,"sources":["Colors.module.css","components/home/Home.module.css","assets/logo.png","components/list/List.module.css","API/API.js","components/card/Card.jsx","components/list/List.jsx","components/home/Home.jsx","App.js","serviceWorker.js","index.js","components/card/Card.module.css"],"names":["module","exports","instance","axios","create","baseURL","withCredentials","API","fetchList","id","get","then","r","data","addTask","text","post","done","createList","title","color","JSON","stringify","name","items","editTask","listId","taskId","task","patch","deleteTask","delete","renameList","newName","window","Options","props","className","styles","options","icon","colorF","onClick","editMode","saveFun","editFun","deleteFun","Card","useState","isOptsShown","showOpts","setEditMode","newText","setNewText","markTask","list","update","saveTask","card","active","grid","btn","textDone","textActive","onKeyPress","e","key","preventDefault","onBlur","input","autoFocus","value","onChange","target","menuBtn","hideFun","markFun","Header","isCopied","setCopied","newTitle","setNewTitle","useEffect","rename","header","titleSection","headerTitle","onSubmit","placeholder","link","to","titleButton","copySection","location","href","onCopy","copyLink","NewCard","cardText","setCardText","onAdd","document","querySelector","focus","inputWrapper","addButton","List","useParams","setItems","setTitle","colors","default","setColorF","defaultB","colorB","setColorB","redB","red","blueB","blue","greenB","green","darkB","dark","doneItemsComponents","Object","entries","map","item","activeItemsComponents","background","resp","scrollIntoView","behavior","pseudoExtender","Home","setColor","setLink","wrapper","form","colorsSection","colorActive","buttonSection","button","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a6da4a18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"Colors_red__2umzL\",\"green\":\"Colors_green__26MeA\",\"blue\":\"Colors_blue__3RJOr\",\"dark\":\"Colors_dark__1UBtV\",\"default\":\"Colors_default__1OxFX\",\"redB\":\"Colors_redB__3E4Kk\",\"greenB\":\"Colors_greenB__VAT1Q\",\"blueB\":\"Colors_blueB__1Wfjx\",\"darkB\":\"Colors_darkB__31ZA4\",\"defaultB\":\"Colors_defaultB__XvoLG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Home_wrapper__21I8r\",\"AnimationName\":\"Home_AnimationName__129wy\",\"form\":\"Home_form__2PVZc\",\"colorsSection\":\"Home_colorsSection__1qhpQ\",\"colors\":\"Home_colors__Wn3v2\",\"color\":\"Home_color__SxRST\",\"colorActive\":\"Home_colorActive__TtI0C\",\"input\":\"Home_input__g22eg\",\"buttonSection\":\"Home_buttonSection__3IyhQ\",\"button\":\"Home_button__2bu16\"};","module.exports = __webpack_public_path__ + \"static/media/logo.dd6c8133.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"List_list__3Y7K_\",\"background\":\"List_background__38Tqr\",\"link\":\"List_link__3S9sQ\",\"header\":\"List_header__1dY2M\",\"titleSection\":\"List_titleSection__2ygVl\",\"headerTitle\":\"List_headerTitle__1KaA3\",\"title\":\"List_title__2nKQA\",\"titleButton\":\"List_titleButton__2bwLa\",\"copySection\":\"List_copySection__3tSQk\",\"copyLink\":\"List_copyLink__2y28D\",\"inputWrapper\":\"List_inputWrapper__haad0\",\"input\":\"List_input__1a24L\",\"addButton\":\"List_addButton__2tGz8\",\"pseudoExtender\":\"List_pseudoExtender__1oyS8\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create(\r\n    {\r\n        baseURL: \"https://todo-list-4b27a.firebaseio.com/\",\r\n        withCredentials: false\r\n    }\r\n)\r\nexport const API = {\r\n    fetchList: (id) => {\r\n        return instance.get(`storage/${id}.json`).then(r=>r.data)\r\n    },\r\n    addTask: (id, text) => {\r\n        return instance.post(`storage/${id}/items.json`, {text: text, done: false}).then(r=>r.data)\r\n    },\r\n    createList: (title, color) => {\r\n        return instance.post('storage.json', JSON.stringify({name: title, color: color, items: []})).then(r=>r.data)\r\n    },\r\n    editTask: (listId, taskId, task) => {\r\n        return instance.patch(`storage/${listId}/items/${taskId}.json`, {text: task.text, done: task.done}).then(r=>r.data)\r\n    },\r\n    deleteTask: (listId, taskId) => {\r\n        return instance.delete(`storage/${listId}/items/${taskId}.json`).then(r=>r.data)\r\n    },\r\n    renameList: (listId, newName) => {\r\n        return instance.patch(`storage/${listId}.json`, {name: newName}).then(r=>r.data)\r\n    }\r\n}\r\nwindow.API = API;\r\n\r\n","import React, {useEffect, useState} from 'react'\r\nimport styles from './Card.module.css'\r\nimport {API} from \"../../API/API\";\r\nimport TextArea from 'react-textarea-autosize'\r\n\r\n\r\nconst Options = (props) => {\r\n    return <div className={styles.options}>\r\n        <div className={styles.icon + ' ' + props.colorF} onClick={props.editMode ? props.saveFun : props.editFun}><i\r\n            className={!props.editMode ? 'fas fa-pen' : 'fas fa-check'}/> {props.editMode ? 'Save' : 'Edit'}</div>\r\n        <div className={styles.icon + ' ' + props.colorF} onClick={props.deleteFun}><i className='fas fa-trash'/> Delete\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst Card = (props) => {\r\n    let [isOptsShown, showOpts] = useState(false)\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [newText, setNewText] = useState(props.text)\r\n\r\n    const hideOptions = () => {\r\n        showOpts(false)\r\n    }\r\n    const markTask = () => {\r\n        API.editTask(props.list, props.id, {text: props.text, done: !props.done}).then(\r\n            (r) => {\r\n                props.update(props.list)\r\n            }\r\n        )\r\n    }\r\n    const deleteTask = () => {\r\n        API.deleteTask(props.list, props.id).then(\r\n            r => {\r\n                props.update(props.list)\r\n            }\r\n        )\r\n    }\r\n\r\n    const listenKey = (e) => {\r\n        if (e.key === 'Enter') {\r\n            e.preventDefault()\r\n            saveTask()\r\n        }\r\n    }\r\n\r\n    const saveTask = () => {\r\n        API.editTask(props.list, props.id, {text: newText, done: props.done}).then(\r\n            (r) => {\r\n                setEditMode(false)\r\n                props.update(props.list)\r\n            }\r\n        )\r\n    }\r\n    return <div className={`${styles.card} ${props.done ? styles.done : styles.active}`}>\r\n        <div className={styles.grid}>\r\n            <div className={styles.btn + ' ' + props.colorF}> {!props.done ?\r\n                <i className='far fa-circle' onClick={markTask}/> :\r\n                <i className='fas fa-check-circle' onClick={markTask}/>}</div>\r\n            <div\r\n                className={props.done ? styles.textDone : styles.textActive}>{editMode ?\r\n                <input onKeyPress={listenKey} onBlur={()=>setEditMode(false)} className={styles.input} autoFocus={true} value={newText}\r\n                       onChange={(e) => {\r\n                           setNewText(e.target.value)}}/> : props.text}</div>\r\n            <div className={styles.btn + ' ' + props.colorF}><i\r\n                id={styles.menuBtn}\r\n                className={isOptsShown ? 'fas fa-ellipsis-h' : 'fas fa-ellipsis-h'}\r\n                onClick={() => showOpts(!isOptsShown)}/></div>\r\n        </div>\r\n        {isOptsShown && <Options\r\n            colorF={props.colorF} hideFun={hideOptions} markFun={markTask}\r\n            deleteFun={deleteTask} editMode={editMode}\r\n            editFun={() => setEditMode(true)} saveFun={saveTask}/>}\r\n    </div>\r\n}\r\nexport default Card","import React, {useEffect, useState} from 'react'\r\nimport styles from './List.module.css'\r\nimport Card from \"../card/Card\";\r\nimport {NavLink, useParams} from 'react-router-dom'\r\nimport {API} from \"../../API/API\";\r\nimport TextArea from 'react-textarea-autosize'\r\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\r\nimport colors from './../../Colors.module.css'\r\nimport logo from '../../assets/logo.png'\r\n\r\nconst Header = (props) => {\r\n    let [isCopied, setCopied] = useState(false)\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [newTitle, setNewTitle] = useState(props.title)\r\n\r\n    useEffect(\r\n        ()=>{\r\n            setNewTitle(props.title)\r\n        }, [props.title]\r\n    )\r\n\r\n    const rename = () => {\r\n        API.renameList(props.listId, newTitle === '' ? props.title : newTitle).then(r => {\r\n            setEditMode(false)\r\n            props.update(props.listId)\r\n        })\r\n    }\r\n\r\n\r\n    return <div className={styles.header}>\r\n        <div className={styles.titleSection}>\r\n            <div className={styles.headerTitle}>\r\n                {editMode\r\n                    ?\r\n                    <input autoFocus={true} onSubmit={rename} placeholder={'New title...'} onChange={(e) => {setNewTitle(e.target.value)}}\r\n                           value={newTitle}/>\r\n                           :\r\n                    <div className={styles.title}><NavLink className={styles.link} to={'/'}>{'tododoli/'}</NavLink>{<span>{props.title}</span> || ''}</div>\r\n                }\r\n            </div>\r\n            <div className={styles.titleButton}>\r\n                <i\r\n                    className={editMode ? 'fas fa-check' : 'fas fa-pen'}\r\n                    onClick={editMode ? rename : () => setEditMode(true)}/>\r\n            </div>\r\n        </div>\r\n        <div className={styles.copySection}>\r\n            <CopyToClipboard text={window.location.href} onCopy={() => setCopied(true)}>\r\n                <div className={styles.copyLink}>\r\n                    <i className={isCopied ? 'fas fa-check' : 'fas fa-link'}/>\r\n                </div>\r\n            </CopyToClipboard>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst NewCard = (props) => {\r\n    let [cardText, setCardText] = useState('')\r\n    const updateInput = (e) => {\r\n        setCardText(e.target.value)\r\n    }\r\n\r\n    const onAdd = () => {\r\n        props.addTask(cardText)\r\n        setCardText('')\r\n        document.querySelector('#input').focus()\r\n\r\n    }\r\n    const listenKey = (e) => {\r\n        if (e.key === 'Enter')  {\r\n            e.preventDefault()\r\n            onAdd()\r\n        }\r\n    }\r\n\r\n    return <div className={styles.inputWrapper} id={'addCard'}>\r\n        <input id={'input'} placeholder='New task...' className={styles.input} value={cardText}\r\n                  onChange={updateInput} onKeyPress={listenKey}/>\r\n        <div className={styles.addButton+' '+props.color} onClick={onAdd}><i className='fas fa-plus-circle'/></div>\r\n    </div>\r\n}\r\n\r\nconst List = () => {\r\n    let {id} = useParams()\r\n    let [items, setItems] = useState({})\r\n    let [title, setTitle] = useState('')\r\n    let [colorF, setColorF] = useState(colors.default) // Yeah I know how weird it is\r\n    let [colorB, setColorB] = useState(colors.defaultB)\r\n\r\n    useEffect(\r\n        () => {\r\n            fetchList(id)\r\n        }, [id]\r\n    )\r\n    const fetchList = (id) => {\r\n        API.fetchList(id).then(r => {\r\n            setItems(r.items)\r\n            setTitle(r.name)\r\n            switch (r.color) {\r\n                case 'red':\r\n                    setColorB(colors.redB)\r\n                    setColorF(colors.red)\r\n                    break\r\n                case 'blue':\r\n                    setColorB(colors.blueB)\r\n                    setColorF(colors.blue)\r\n                    break\r\n                case 'green':\r\n                    setColorB(colors.greenB)\r\n                    setColorF(colors.green)\r\n                    break\r\n                case 'dark':\r\n                    setColorB(colors.darkB)\r\n                    setColorF(colors.dark)\r\n                    break\r\n                default:\r\n                    setColorB(colors.defaultB)\r\n                    setColorF(colors.default)\r\n            }\r\n        })\r\n    }\r\n    const addTask = (text) => {\r\n        API.addTask(id, text).then(\r\n            (resp) => {\r\n                resp.name && fetchList(id)\r\n                document.querySelector('#addCard').scrollIntoView({behavior: \"auto\"})\r\n            }\r\n        )\r\n    }\r\n\r\n    const doneItemsComponents = items ? Object.entries(items).map(([key, item]) => {\r\n        if (item.done) return <Card colorF={colorF} done={item.done} text={item.text} key={key} id={key} list={id} update={fetchList}/>\r\n    }) : null\r\n    const activeItemsComponents = items ? Object.entries(items).map(([key, item]) => {\r\n        if (!item.done) return <Card colorF={colorF} done={item.done} text={item.text} key={key} id={key} list={id} update={fetchList}/>\r\n    }) : null\r\n\r\n    return <div className={`${styles.background} ${colorB}`}>\r\n        <Header title={title} listId={id} update={fetchList}/>\r\n        <div className={styles.list}>\r\n            {doneItemsComponents}\r\n            {activeItemsComponents}\r\n            <NewCard addTask={addTask} color={colorF}/>\r\n            <div className={styles.pseudoExtender}/>\r\n        </div>\r\n    </div>\r\n}\r\nexport default List","import React, {useState} from 'react'\r\nimport styles from './Home.module.css'\r\nimport colors from '../../Colors.module.css'\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {API} from \"../../API/API\";\r\n\r\n\r\nconst Home = () => {\r\n\r\n    let [color, setColor] = useState('red')\r\n    let [title, setTitle] = useState('')\r\n    let [link, setLink] = useState('')\r\n\r\n    const createList = () => {\r\n        API.createList(title!=='' ? title : 'New list', color).then(\r\n            (r) => {\r\n                setLink('/' + r.name)\r\n            }\r\n        )\r\n    }\r\n    const listenKey = (e) => {\r\n        if (e.key === 'Enter')  {\r\n            e.preventDefault()\r\n            createList()\r\n        }\r\n    }\r\n\r\n    if (link !== '') return <Redirect to={link}/>\r\n    return <div className={styles.wrapper}>\r\n        <div className={styles.form}>\r\n            <div className={styles.input}>\r\n                <input autoFocus={true} onKeyPress={listenKey} placeholder={'New List...'} value={title} onChange={(e) => setTitle(e.target.value)}/>\r\n            </div>\r\n            <div className={styles.colorsSection}>\r\n                <div className={styles.colors}>\r\n                    <div className={(color === 'red' ? styles.colorActive : styles.color) + ' ' + colors.redB}\r\n                         onClick={() => setColor('red')}/>\r\n                    <div className={(color === 'green' ? styles.colorActive : styles.color) + ' ' + colors.greenB}\r\n                         onClick={() => setColor('green')}/>\r\n                    <div className={(color === 'blue' ? styles.colorActive : styles.color) + ' ' + colors.blueB}\r\n                         onClick={() => setColor('blue')}/>\r\n                    <div className={(color === 'dark' ? styles.colorActive : styles.color) + ' ' + colors.darkB}\r\n                         onClick={() => setColor('dark')}/>\r\n                </div>\r\n            </div>\r\n            <div className={styles.buttonSection}>\r\n                <div className={styles.button} onClick={createList}>Create List</div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Home","import React from 'react';\nimport './App.css';\nimport {HashRouter, Route} from \"react-router-dom\";\nimport List from \"./components/list/List\";\nimport Home from './components/home/Home'\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n    <HashRouter>\n      <Route exact path={'/'} component={Home}/>\n      <Route exact path={'/:id'} component={List}/>\n    </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3MKhb\",\"grid\":\"Card_grid__3qjAA\",\"btn\":\"Card_btn__1icHr\",\"menuBtn\":\"Card_menuBtn__3nbt5\",\"done\":\"Card_done__1-s6X\",\"active\":\"Card_active__2XdAX\",\"textDone\":\"Card_textDone__6XGo6\",\"options\":\"Card_options__2zSzB\",\"icon\":\"Card_icon__38c_C\",\"input\":\"Card_input__1HGG_\"};"],"sourceRoot":""}